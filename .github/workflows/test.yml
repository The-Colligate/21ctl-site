name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on:
  push:
    branches:
      - build
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "🔎 The name of your branch is ${{ steps.meta.outputs.tags }} and your repository is ${{ steps.meta.outputs.labels }}."
      - uses: actions/checkout@v2
      - name: Build the Docker image
        run: docker build . --file Dockerfile --rm=false
      # - name: Deleting build directory
      #   uses: appleboy/ssh-action@v0.1.7
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.SSH_USER }}
      #     password: ${{ secrets.PASSWORD }}
      #     port: 22
      #     script: |
      #       rm -rf ./build/*
      #       rm -rf ./build/.*
      - name: Check out repository code
        uses: garygrossgarten/github-action-scp@v0.8.0
        with:
          local: ./
          remote: /home/sam/public_html/build
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.PASSWORD }}
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          script: |
            cd /home/sam/public_html
            rm -rf ./test_portal_site/*.json
            rm -rf ./test_portal_site/*.js
            rm -rf ./test_portal_site/*.html
            rm -rf ./test_portal_site/*.mp4
            rm -rf ./test_portal_site/_next/static/*
            yes | cp -rf ./build/.next/server/pages/* ./test_portal_site
            yes | cp -rf ./build/.next/static ./test_portal_site/_next
            ls -la